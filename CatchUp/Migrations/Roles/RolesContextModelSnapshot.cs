// <auto-generated />
using System;
using CatchUp.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CatchUp.Migrations.Roles
{
    [DbContext(typeof(RolesContext))]
    partial class RolesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CatchUp.Models.Lessons.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<int>("OfferId");

                    b.Property<int>("RoleId");

                    b.Property<int>("StudentId");

                    b.Property<int>("TeacherId");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("CatchUp.Models.Lessons.Rating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LessonId");

                    b.Property<short>("Rate");

                    b.Property<int>("RoleId");

                    b.Property<int>("StudentId");

                    b.Property<int>("TeacherId");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Rating");
                });

            modelBuilder.Entity("CatchUp.Models.Offers.Offer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("HomeVisits");

                    b.Property<float?>("VisitRange");

                    b.HasKey("Id");

                    b.ToTable("Offer");
                });

            modelBuilder.Entity("CatchUp.Models.Offers.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LessonMinutes");

                    b.Property<int>("Leveld");

                    b.Property<int?>("OfferId");

                    b.Property<decimal>("Price");

                    b.Property<int>("SubjectTypeId");

                    b.HasKey("Id");

                    b.HasIndex("OfferId");

                    b.ToTable("Subject");
                });

            modelBuilder.Entity("CatchUp.Models.Roles.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City");

                    b.Property<string>("Flat");

                    b.Property<double>("Latitude");

                    b.Property<double>("Longitude");

                    b.Property<string>("Number");

                    b.Property<string>("PostalCode");

                    b.Property<string>("Street");

                    b.HasKey("Id");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("CatchUp.Models.Roles.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RoleType");

                    b.HasKey("Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("CatchUp.Models.Roles.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Begining")
                        .HasMaxLength(5);

                    b.Property<int>("Day");

                    b.Property<string>("Ending")
                        .HasMaxLength(5);

                    b.Property<int>("TeacherId");

                    b.HasKey("Id");

                    b.HasIndex("TeacherId");

                    b.ToTable("Schedule");
                });

            modelBuilder.Entity("CatchUp.Models.Roles.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddressId");

                    b.Property<string>("Name");

                    b.Property<string>("Surname");

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("CatchUp.Models.Roles.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddressId");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<int?>("OffersId");

                    b.Property<string>("Surname");

                    b.HasKey("Id");

                    b.HasIndex("OffersId");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("CatchUp.Models.Roles.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Login");

                    b.Property<string>("Password");

                    b.Property<int?>("StudentId");

                    b.Property<int?>("TeacherId");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CatchUp.Models.Lessons.Order", b =>
                {
                    b.HasOne("CatchUp.Models.Roles.Student")
                        .WithMany("Orders")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CatchUp.Models.Roles.Teacher")
                        .WithMany("Orders")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CatchUp.Models.Lessons.Rating", b =>
                {
                    b.HasOne("CatchUp.Models.Roles.Student")
                        .WithMany("Ratings")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CatchUp.Models.Roles.Teacher")
                        .WithMany("Ratings")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CatchUp.Models.Offers.Subject", b =>
                {
                    b.HasOne("CatchUp.Models.Offers.Offer")
                        .WithMany("Subjects")
                        .HasForeignKey("OfferId");
                });

            modelBuilder.Entity("CatchUp.Models.Roles.Schedule", b =>
                {
                    b.HasOne("CatchUp.Models.Roles.Teacher")
                        .WithMany("Schedule")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CatchUp.Models.Roles.Teacher", b =>
                {
                    b.HasOne("CatchUp.Models.Offers.Offer", "Offers")
                        .WithMany()
                        .HasForeignKey("OffersId");
                });

            modelBuilder.Entity("CatchUp.Models.Roles.User", b =>
                {
                    b.HasOne("CatchUp.Models.Roles.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId");

                    b.HasOne("CatchUp.Models.Roles.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId");
                });
#pragma warning restore 612, 618
        }
    }
}
